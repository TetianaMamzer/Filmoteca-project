{"mappings":"oeAAA,MAAMA,EAAmB,KACrB,IAAIC,EAAgB,KACpB,IACIA,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kB,CAClD,MACE,M,CAEJ,OAAOJ,CAAa,EAGlBK,EAAiB,KACnB,IAAIC,EAAc,KAClB,IACIA,EAAcL,KAAKC,MAAMC,aAAaC,QAAQ,gB,CAChD,MACE,M,CAEJ,OAAOE,CAAW,ECjBtB,IAAAC,EAAAC,EAAA,SAIA,MAAMC,EACJ,+FAEIC,EAAUC,SAASC,cAAc,YACjCC,EAAaF,SAASC,cAAc,8BACpCE,EAAWH,SAASC,cAAc,2BAClCG,EAAUJ,SAASC,cAAc,YAEvC,IAAII,EAAgBjB,IAChBkB,EAAcZ,IAgBlB,SAASa,EAAcC,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,GAAK,GACtC,EAAAb,EAAAe,mBAAkBH,EAAOC,IAAIG,MAAKC,IAChCd,EAAQe,mBAAmB,YAAaC,EAAuBF,GAAM,G,CAhBvD,MAAjBR,GAAkD,IAAzBA,EAAcK,QACxB,MAAfJ,GAA8C,IAAvBA,EAAYI,OAI3BL,EAAcK,OAAS,GAChCR,EAAWc,UAAUC,IAAI,aACzBV,EAAcF,IACLC,EAAYI,OAAS,IAC9BP,EAASa,UAAUC,IAAI,aACvBV,EAAcD,KAPdF,EAAQc,UAAY,uDAAuDpB,IAC3EC,EAAQmB,UAAY,IAmDtB,SAASC,IACPpB,EAAQmB,UAAY,E,CAGtB,SAASH,EAAuBF,GAC9B,KACoB,MAAjBR,GAAkD,IAAzBA,EAAcK,QACxB,MAAfJ,GAA8C,IAAvBA,EAAYI,QAEpC,OAEF,MAAMU,GACJA,EAAEC,MACFA,EAAKC,SACLA,EAAQC,YACRA,EAAWC,aACXA,EAAYC,OACZA,EAAMC,eACNA,EAAcC,WACdA,EAAUC,aACVA,EAAYC,WACZA,GACEhB,EAKJ,MAAO,2EAEsCO,sEACAG,WAAqBF,kCACxCA,qEANNR,EAAKY,OAAOK,KAAIC,GAAWA,EAAQC,OAAMC,KAAK,yEASPT,0C,CAO7DtB,EAAWgC,iBAAiB,SA3EFC,IACxBhC,EAASa,UAAUoB,OAAO,aAC1BlC,EAAWc,UAAUC,IAAI,aACzBE,IAEAd,EAAgBjB,IAEK,MAAjBiB,GAAkD,IAAzBA,EAAcK,QACzCN,EAAQc,UAAY,6DAA6DpB,IACjFC,EAAQmB,UAAY,IACXb,EAAcK,OAAS,IAChCX,EAAQmB,UAAY,GACpBd,EAAQc,UAAY,GACpBX,EAAcF,G,IA+DlBF,EAAS+B,iBAAiB,SA3DFC,IACtBhC,EAASa,UAAUC,IAAI,aACvBf,EAAWc,UAAUoB,OAAO,aAC5BjB,IAEAb,EAAcZ,IAEK,MAAfY,GAA8C,IAAvBA,EAAYI,QACrCN,EAAQc,UAAY,2DAA2DpB,IAC/EC,EAAQmB,UAAY,IACXZ,EAAYI,OAAS,IAC9BX,EAAQmB,UAAY,GACpBd,EAAQc,UAAY,GACpBX,EAAcD,G","sources":["src/js/library/from-local-storage-info.js","src/js/library/my-library.js"],"sourcesContent":["const isMovieInWatched = () => {\n    let watchedMovies = null;\n    try {\n        watchedMovies = JSON.parse(localStorage.getItem('Watched movies'));\n    } catch {\n        return;\n    }\n    return watchedMovies;\n}\n\nconst isMovieInQueue = () => {\n    let queueMovies = null;\n    try {\n        queueMovies = JSON.parse(localStorage.getItem('Queue movies'));\n    } catch {\n        return;\n    }\n    return queueMovies;\n}\n\nexport { isMovieInWatched, isMovieInQueue };","import { fetchMovieInfoAPI } from '../film-api';\n\nimport { isMovieInWatched, isMovieInQueue } from './from-local-storage-info';\n\nconst IF_LIBRARY_EMPTY_IMG =\n  '<image class=\"message-image\" src=\"https://i.imgur.com/Ud8xgso.gif\" width=\"150\" height\"200\"/>';\n\nconst library = document.querySelector('.library');\nconst watchedBtn = document.querySelector('.button-container__watched');\nconst queueBtn = document.querySelector('.button-container__queu');\nconst message = document.querySelector('.message');\n\nlet watchedMovies = isMovieInWatched();\nlet queueMovies = isMovieInQueue();\n\nif (\n  (watchedMovies == null || watchedMovies.length === 0) &&\n  (queueMovies == null || queueMovies.length === 0)\n) {\n  message.innerHTML = `<p class=\"message-text\">You library is empty yet</p>${IF_LIBRARY_EMPTY_IMG}`;\n  library.innerHTML = '';\n} else if (watchedMovies.length > 0) {\n  watchedBtn.classList.add('is-active');\n  renderLibrary(watchedMovies);\n} else if (queueMovies.length > 0) {\n  queueBtn.classList.add('is-active');\n  renderLibrary(queueMovies);\n}\n\nfunction renderLibrary(movies) {\n  for (let i = 0; i < movies.length; i += 1) {\n    fetchMovieInfoAPI(movies[i]).then(data => {\n      library.insertAdjacentHTML('beforeend', createLibraryMovieItem(data));\n    });\n  }\n}\n\nconst onWatchedBtnClick = event => {\n  queueBtn.classList.remove('is-active');\n  watchedBtn.classList.add('is-active');\n  clearLibrary();\n\n  watchedMovies = isMovieInWatched();\n\n  if (watchedMovies == null || watchedMovies.length === 0) {\n    message.innerHTML = `<p class=\"message-text\">Your watched list is empty yet</p>${IF_LIBRARY_EMPTY_IMG}`;\n    library.innerHTML = '';\n  } else if (watchedMovies.length > 0) {\n    library.innerHTML = '';\n    message.innerHTML = '';\n    renderLibrary(watchedMovies);\n  }\n};\n\nconst onQueueBtnClick = event => {\n  queueBtn.classList.add('is-active');\n  watchedBtn.classList.remove('is-active');\n  clearLibrary();\n\n  queueMovies = isMovieInQueue();\n\n  if (queueMovies == null || queueMovies.length === 0) {\n    message.innerHTML = `<p class=\"message-text\">Your queue list is empty yet</p>${IF_LIBRARY_EMPTY_IMG}`;\n    library.innerHTML = '';\n  } else if (queueMovies.length > 0) {\n    library.innerHTML = '';\n    message.innerHTML = '';\n    renderLibrary(queueMovies);\n  }\n};\n\nfunction clearLibrary() {\n  library.innerHTML = '';\n}\n\nfunction createLibraryMovieItem(data) {\n  if (\n    (watchedMovies == null || watchedMovies.length === 0) &&\n    (queueMovies == null || queueMovies.length === 0)\n  ) {\n    return;\n  }\n  const {\n    id,\n    title,\n    overview,\n    poster_path,\n    release_date,\n    genres,\n    original_title,\n    popularity,\n    vote_average,\n    vote_count,\n  } = data;\n\n  const basicImgURL = 'https://image.tmdb.org/t/p/w500';\n  const genresMovie = data.genres.map(element => element.name).join(', ');\n\n  return `\n      <li class=\"card\">\n  <a href=\"\" class=\"card-link link\" data-id=\"${id}\">\n    <img class=\"card-img\" src=\"${basicImgURL}${poster_path}\" alt=\"${title}\">\n    <h3 class=\"card-name\">${title}</h3>\n    <div class=\"card-item\">\n      <p class=\"card-genres\">${genresMovie}</p>\n      <p class=\"card-year\"><span class=\"card-line\">|</span>${release_date}</p>\n    </div>\n  </a>\n</li>\n      `;\n}\n\nwatchedBtn.addEventListener('click', onWatchedBtnClick);\nqueueBtn.addEventListener('click', onQueueBtnClick);\n\n// треба описати клас is-active для кнопок\n"],"names":["$409ee4f54fb2d0b4$export$6f2705b68ffed592","watchedMovies","JSON","parse","localStorage","getItem","$409ee4f54fb2d0b4$export$c87fd7cccbc83cb7","queueMovies","$8sSZi","parcelRequire","$316d4e8a771c35e3$var$IF_LIBRARY_EMPTY_IMG","$316d4e8a771c35e3$var$library","document","querySelector","$316d4e8a771c35e3$var$watchedBtn","$316d4e8a771c35e3$var$queueBtn","$316d4e8a771c35e3$var$message","$316d4e8a771c35e3$var$watchedMovies","$316d4e8a771c35e3$var$queueMovies","$316d4e8a771c35e3$var$renderLibrary","movies","i","length","fetchMovieInfoAPI","then","data","insertAdjacentHTML","$316d4e8a771c35e3$var$createLibraryMovieItem","classList","add","innerHTML","$316d4e8a771c35e3$var$clearLibrary","id","title","overview","poster_path","release_date","genres","original_title","popularity","vote_average","vote_count","map","element","name","join","addEventListener","event","remove"],"version":3,"file":"library-page.669f5f79.js.map"}